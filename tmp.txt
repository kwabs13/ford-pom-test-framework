package com.ford.pom_framework.tests;

import java.net.URL;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.safari.SafariDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;

public class Base {

	protected WebDriver driver = null;

	@BeforeTest
	@Parameters("browser")
	public void browserSelection(String browser) throws Exception {
		try {
			if (browser.equalsIgnoreCase("firefox")) {
				System.setProperty("webdriver.gecko.driver",
						"./resources/geckodriver");
				driver = new FirefoxDriver();
			}
			else if (browser.equalsIgnoreCase("chrome")) {
				System.setProperty("webdriver.chrome.driver",
						"./resources/chromedriver");
				driver = new ChromeDriver();
			}
			else if (browser.equalsIgnoreCase("safari")) {
				System.setProperty("webdriver.safari.driver",
						"./resources/safaridriver");
				driver = new SafariDriver();
			} else {
				throw new Exception("Browser is not correct");
			}
		} catch (Exception ex) {
			throw ex;
		}
		driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
	}

	@BeforeTest
	public void initialize() throws Exception {
		try {
			String urlToNavigate = "https://accessories.ford.com/";
			driver.navigate().to(urlToNavigate);
			driver.manage().window().maximize();
		} catch (Exception ex) {
			throw ex;
		}
	}

	@AfterTest
	public void cleanUp() throws Exception {
		try {
			driver.quit();
		} catch (Exception ex) {
			throw ex;
		}
	}	
	
}

